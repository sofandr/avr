/*
 * tiny13_board_pcint_pwm
 * Демо-прошивка отладочной платы на ATtiny13.
 * Демонстрация работы ШИМ-регулятора (в режиме коррекции фазы):
 * неинверсный сигнал на выходе OC0A.
 * ШИМ-сигнал регулируется двумя кнопками (+/-):
 * по нажатию кнопки срабатывает прерывание pcint0
 * и, в зависимости от того, какая из кнопок нажата,
 * увеличивается либо уменьшается значение регистра сравнения OCR0A для таймера ШИМ.
 */
 
// 1.2Mhz
//#define F_CPU 1200000UL
// 9.6Mhz
#define F_CPU 9600000UL
             
#include <stdint.h>
#include <avr/io.h>
#include <avr/interrupt.h>

#define PWM PB0 // OC0A
#define BUTTONPLUS PB3 // PCINT3
#define BUTTONMINUS PB4 // PCINT4

#define BUTTONPLUS_PRESSED	(!((PINB >> BUTTONPLUS) & 1))
#define BUTTONMINUS_PRESSED	(!((PINB >> BUTTONMINUS) & 1))

volatile uint8_t state = 0; // зафиксированное состояние
volatile uint8_t counter = 0; // счётчик для обработки нажатий кнопок

int main(void)
{
	// Выход ШИМ:
	DDRB  |=  (1 << PWM);	// выход = 1
	PORTB &= ~(1 << PWM);	// по умолчанию отключен = 0

	// Входы кнопок:
	DDRB  &= ~((1<<BUTTONPLUS)|(1<<BUTTONMINUS)); // входы = 0
	PORTB |=  (1<<BUTTONPLUS)|(1<<BUTTONMINUS); // подтянуты = 1
	
	// Настройка таймера T0 для ШИМ и обработки нажатий кнопок:
	TCCR0A	= 0b10000001; // режим коррекции фазы ШИМ, неинверсный сигнал на выходе OC0A
	TCCR0B	= 0b00000010; // предделитель тактовой частоты CLK/8
    //TCCR0B	= 0b00000001; // 80 страница даташита clkI/O/(No prescaling)
	TCNT0	= 0; // начальное значение счётчика
	OCR0A	= 0; // начальное значение регистра сравнения A (для формирования ШИМ сигнала на выходе)
	TIMSK0	= 0b00000010; // разрешаем прерывания по переполнению счётчика
	
	// Настройка внешних прерываний
	GIMSK |= (1<<PCIE); // Разрешаем внешние прерывания PCINT0.
	PCMSK |= (1<<BUTTONPLUS)|(1<<BUTTONMINUS); // Разрешаем по маске прерывания на ногак кнопок
	
	sei(); //разрешаем глобально прерывания
	
	// Основной цикл
	while(1)
	{
	}
}


// Обработчик прерывания PCINT0
ISR(PCINT0_vect)
{
	if ( state == 0 )
	{
		if ( BUTTONPLUS_PRESSED && !BUTTONMINUS_PRESSED ) // если нажата кнопка "+"
			state = 1;
		else if ( !BUTTONPLUS_PRESSED && BUTTONMINUS_PRESSED ) // если нажата кнопка "-"
			state = 2;
	}
}


ISR(TIM0_OVF_vect)
{
	if ( state != 0 )
	{
		if (counter < 29)
			counter++; // отсчитываем ~100мс
		else
		{
			if (state == 1)
			{
				if (OCR0A <= 250)
					OCR0A += 5; // увеличиваем значение регистра совпадения для ШИМ таймера, пока не достигнет максимума
				if ( !BUTTONPLUS_PRESSED ) // если кнопка "+" была отпущена
					state = 0; // сбрасываем состояние
			}
			else if (state == 2)
			{
				if (OCR0A >= 5)
					OCR0A -= 5; // уменьшаем значение регистра совпадения для ШИМ таймера, пока не достигнет нуля
				if ( !BUTTONMINUS_PRESSED ) // если кнопка "-" была отпущена
					state = 0; // сбрасываем состояние
			}
			counter = 0; // сбрасываем счётчик
		}
	}
}
